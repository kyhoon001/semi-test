<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.ShopListMapper">



	<insert id="insert" parameterType="product">

		INSERT INTO PRODUCT VALUES (
		#{product_id} , #{name}, #{price}, #{stock},
		#{img},
		#{category_id},#{soldamount} ,#{description}
		)
	</insert>


	<update id="update" parameterType="product">

		UPDATE PRODUCT
		SET
		PRICE=#{price},NAME=#{name},STOCK=#{stock},IMG= #{img},
		CATEGORY_ID =
		#{category_id}, SOLDAMOUNT= #{soldamount}, DESCRIPTION =
		#{description}
		WHERE ID=#{id}
	</update>

	<delete id="delete" parameterType="String">
		DELETE FROM PRODUCT
		WHERE
		PRODUCT_ID=#{product_id}
	</delete>

	<select id="search" parameterType="input" resultType="product">
       select * from
        (
        select DISTINCT
		rownum rm,p.product_id,p.name,p.price,p.stock,p.img,
		p.category_id,p.soldamount,p.description,c.category_name
		FROM product p,category c
		where p.category_id = c.category_id
		and p.name
		LIKE '%1%'
		OR c.category_name LIKE '%1%' 
        order by rm asc
        )
        where rm between #{strat_index} and #{end_index}

	</select>


	<select id="select" parameterType="String" resultType="product">
		SELECT *
		FROM PRODUCT WHERE CATEGORY_ID=#{category_id}
	</select>


	<select id="selectall" parameterType="input" resultType="product">
		
   select * from (SELECT rownum rm , p.* FROM PRODUCT p) where rm between #{start_index} and #{end_index}
	</select>

	<select id="selectallcount" resultType="Integer">
		 SELECT count(*) FROM PRODUCT
	</select>
	
	<select id="searchcount" parameterType="input" resultType="Integer">
       select count(*) from
        (
        select DISTINCT
		rownum rm,p.product_id,p.name,p.price,p.stock,p.img,
		p.category_id,p.soldamount,p.description,c.category_name
		FROM product p,category c
		where p.category_id = c.category_id
		and p.name
		LIKE '%'||#{search}||'%' 
		OR c.category_name LIKE '%'||#{search}||'%' 
        order by rm asc
        )
        where rm between #{start_index} and #{end_index}

	</select>



</mapper>






















